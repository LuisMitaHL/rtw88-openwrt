From 0bf29f9ab59d9c21a3bb33cf52303393bc3e1a57 Mon Sep 17 00:00:00 2001
From: Luis Mita <luis@luismita.com>
Date: Sun, 27 Apr 2025 21:50:47 -0400
Subject: [PATCH] Reapply "wifi: rtw88: Don't require TX report for null data
 during scans"

This reverts commit 0ef5c8157a2d849ebd72cb26c2acc5934ca837f3.
---
 pci.c  |  2 +-
 sdio.c |  2 +-
 tx.c   | 15 ++++++++++++++-
 tx.h   |  1 +
 usb.c  |  2 +-
 5 files changed, 18 insertions(+), 4 deletions(-)

diff --git a/pci.c b/pci.c
index f348265..5bcba9e 100644
--- a/pci.c
+++ b/pci.c
@@ -994,7 +994,7 @@ static void rtw_pci_tx_isr(struct rtw_dev *rtwdev, struct rtw_pci *rtwpci,
 		info = IEEE80211_SKB_CB(skb);
 
 		/* enqueue to wait for tx report */
-		if (info->flags & IEEE80211_TX_CTL_REQ_TX_STATUS) {
+		if (rtw_tx_report_needed(rtwdev, skb)) {
 			rtw_tx_report_enqueue(rtwdev, skb, tx_data->sn);
 			continue;
 		}
diff --git a/sdio.c b/sdio.c
index 579e0f6..95dd637 100644
--- a/sdio.c
+++ b/sdio.c
@@ -1205,7 +1205,7 @@ static void rtw_sdio_indicate_tx_status(struct rtw_dev *rtwdev,
 	skb_pull(skb, rtwdev->chip->tx_pkt_desc_sz);
 
 	/* enqueue to wait for tx report */
-	if (info->flags & IEEE80211_TX_CTL_REQ_TX_STATUS) {
+	if (rtw_tx_report_needed(rtwdev, skb)) {
 		rtw_tx_report_enqueue(rtwdev, skb, tx_data->sn);
 		return;
 	}
diff --git a/tx.c b/tx.c
index 79c27a4..6bf5a4d 100644
--- a/tx.c
+++ b/tx.c
@@ -216,6 +216,19 @@ void rtw_tx_report_purge_timer(void *cntx)
 	spin_unlock_irqrestore(&tx_report->q_lock, flags);
 }
 
+bool rtw_tx_report_needed(struct rtw_dev *rtwdev, struct sk_buff *skb)
+{
+	struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
+	struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
+
+	if (test_bit(RTW_FLAG_SCANNING, rtwdev->flags) &&
+	    ieee80211_is_any_nullfunc(hdr->frame_control))
+		return false;
+
+	return !!(info->flags & IEEE80211_TX_CTL_REQ_TX_STATUS);
+}
+EXPORT_SYMBOL(rtw_tx_report_needed);
+
 void rtw_tx_report_enqueue(struct rtw_dev *rtwdev, struct sk_buff *skb, u8 sn)
 {
 	struct rtw_tx_report *tx_report = &rtwdev->tx_report;
@@ -466,7 +479,7 @@ void rtw_tx_pkt_info_update(struct rtw_dev *rtwdev,
 	bmc = is_broadcast_ether_addr(hdr->addr1) ||
 	      is_multicast_ether_addr(hdr->addr1);
 
-	if (info->flags & IEEE80211_TX_CTL_REQ_TX_STATUS)
+	if (rtw_tx_report_needed(rtwdev, skb))
 		rtw_tx_report_enable(rtwdev, pkt_info);
 
 	pkt_info->bmc = bmc;
diff --git a/tx.h b/tx.h
index d34cdec..978b006 100644
--- a/tx.h
+++ b/tx.h
@@ -97,6 +97,7 @@ void rtw_tx_pkt_info_update(struct rtw_dev *rtwdev,
 			    struct sk_buff *skb);
 void rtw_tx_fill_tx_desc(struct rtw_dev *rtwdev,
 			 struct rtw_tx_pkt_info *pkt_info, struct sk_buff *skb);
+bool rtw_tx_report_needed(struct rtw_dev *rtwdev, struct sk_buff *skb);
 void rtw_tx_report_enqueue(struct rtw_dev *rtwdev, struct sk_buff *skb, u8 sn);
 void rtw_tx_report_handle(struct rtw_dev *rtwdev, struct sk_buff *skb, int src);
 void rtw_tx_rsvd_page_pkt_info_update(struct rtw_dev *rtwdev,
diff --git a/usb.c b/usb.c
index 14b9230..f01cf87 100644
--- a/usb.c
+++ b/usb.c
@@ -330,7 +330,7 @@ static void rtw_usb_write_port_tx_complete(struct urb *urb)
 		skb_pull(skb, rtwdev->chip->tx_pkt_desc_sz);
 
 		/* enqueue to wait for tx report */
-		if (info->flags & IEEE80211_TX_CTL_REQ_TX_STATUS) {
+		if (rtw_tx_report_needed(rtwdev, skb)) {
 			rtw_tx_report_enqueue(rtwdev, skb, tx_data->sn);
 			continue;
 		}
-- 
2.49.0

